#!/usr/bin/env python3

import collections


PublicKey = collections.namedtuple('PublicKey', ['g', 'p', 'h'])
PrivateKey = collections.namedtuple('PrivateKey', ['g', 'p', 'x'])

Plaintext = collections.namedtuple('Plaintext', ['m'])
Ciphertext = collections.namedtuple('Ciphertext', ['c1', 'c2'])


def discrete_log(g: int, a: int, p: int, limit: int) -> int:
    m = int(limit ** 0.5) * 2

    table = {}
    current = 1

    for i in range(m):
        table[current] = i
        current = (current * g) % p

    current = a
    g_inv = pow(g, -m, p)

    for i in range(m):
        if current in table:
            return table[current] + i * m

        current = (current * g_inv) % p


def attack(ciphertext: Ciphertext, public_key: PublicKey, nonce: int) -> Plaintext:
    shared = pow(public_key.h, nonce, public_key.p)
    shared_inv = pow(shared, -1, public_key.p)

    m = ciphertext.c2 * shared_inv % public_key.p

    return Plaintext(m)


def int_to_bytes(number: int) -> bytes:
    length = (number.bit_length() + 7) // 8

    return number.to_bytes(length, 'big')


def main():
    limit = 1_000_000_000_000

    public_key = PublicKey(g=11, p=129457801803344827449278701987444301527314458170280863281219414204401341185941796598447427386618439244637896755214241650188498328079490849239555930077097925781578813551684473970697089016526166942617407693617768318349472247414356082164356176772170147502777125863743749351285535759502927041170964606591944545649, h=26057147328327380808319461283265270994553793235191452586176386116010351857546158795721910436373069744738682039516120888739955127417774524961510359097543410190799120500917228860991617127042851187891327283671611878367122623962743288820831041618098491723907582963879135150483213134590325231410644109241853682440)
    ciphertext = Ciphertext(c1=128710319967288336533408549617423792562443082284799615490754393592735331845043131290926396571351480681825646528005979276898420389399179094689459127138064759299963510135677452872044155895391322999645565950533854757006195414648008448572846923036730913182705963906618836850854462956090151612478332501238144592018, c2=64227781470535723270309209701407339873694864662237738685432807819245329995749923294863469379649816479444554432589068535141400666887237168619250515731274224372604989018075869935318585410806789488747959223745984988120437058335581577400804037799571295895173907972096175705893268746069104436030886903381651861048)

    nonce = discrete_log(public_key.g, ciphertext.c1, public_key.p, limit)

    plaintext = attack(ciphertext, public_key, nonce)
    flag = int_to_bytes(plaintext.m)

    print(flag)


if __name__ == '__main__':
    main()
